#!/bin/bash
set -o pipefail

RUBY_TAG=$1

TAG=$(echo -n "$CIRCLE_PROJECT_USER.$CIRCLE_BRANCH" | sha256sum | awk -F "-" '{print $1}')
APP_IMAGE_TAG=$(echo -n "zzak/rails-ci:v1-ruby-$RUBY_TAG-$TAG" | xargs)

mkdir configs/
cat << EOF > configs/generated_config.yml
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.3

commands:
  run-tests:
    parameters:
      gem:
        type: string
      command:
        type: string
        default: rake test
    steps:
      - run:
          name: Run tests
          command: |
            export APP_IMAGE_TAG=$APP_IMAGE_TAG
            set +e
            .circleci/with-retry.sh \
            env COMPOSE_TLS_VERSION=TLSv1_2 \
            docker-compose -f .circleci/docker-compose.yml run app runner << parameters.gem >> "<< parameters.command >>"

  bundle-restore:
    steps:
      - restore_cache:
          keys:
            - gem-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}
            - gem-cache-v1-ruby-$RUBY_TAG
      - restore_cache:
          keys:
            - yarn-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}
            - yarn-cache-v1-ruby-$RUBY_TAG

  bundle-install:
    steps:
      - bundle-restore
      - run:
          name: Bundle install
          command: |
            export APP_IMAGE_TAG=$APP_IMAGE_TAG
            env COMPOSE_TLS_VERSION=TLSv1_2 \
            docker-compose -f .circleci/docker-compose.yml run app install-deps
      - save_cache:
          key: gem-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundler
      - save_cache:
          key: yarn-cache-v1-ruby-$RUBY_TAG-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  build-image:
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
      resource_class: large
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - checkout
      - run:
          name: Login to docker hub
          command: docker login -u \$REGISTRY_USER -p \$REGISTRY_PASS
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --cache-from=$APP_IMAGE_TAG \
              --tag=$APP_IMAGE_TAG \
              --build-arg BUILDKIT_INLINE_CACHE=1 \
              --build-arg RUBY_IMAGE=$RUBY_TAG \
              -f .circleci/Dockerfile .
      - run:
          name: Push to docker hub
          command: |
            docker push $APP_IMAGE_TAG

  install-deps:
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
      resource_class: large
    steps:
      - checkout
      - run:
          name: Pull build image
          command: |
            docker pull $APP_IMAGE_TAG
      - bundle-install

  test-job:
    parameters:
      gem:
        type: string
      command:
        type: string
        default: rake test
      mysql:
        type: string
        default: mysql:latest
      mysql_prepared_statements:
        type: boolean
        default: false
      nodes:
        type: integer
        default: 1
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
      resource_class: large
    parallelism: << parameters.nodes >>
    environment:
      MYSQL_IMAGE: << parameters.mysql >>
      MYSQL_PREPARED_STATEMENTS: << parameters.mysql_prepared_statements >>
    steps:
      - checkout
      - bundle-restore
      - run:
          name: Pull build image
          command: |
            docker pull $APP_IMAGE_TAG
      - run-tests:
          gem: << parameters.gem >>
          command: << parameters.command >>
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

workflows:
  version: 2
  test:
    jobs:
      - build-image:
      - install-deps:
          name: install-deps
          requires:
            - build-image
      - test-job:
          name: actioncable
          gem: actioncable
          requires:
            - install-deps
      #- actioncable-integration
      - test-job:
          name: actionmailbox
          gem: actionmailbox
          requires:
            - install-deps
      - test-job:
          name: actionmailer
          gem: actionmailer
          requires:
            - install-deps
      - test-job:
          name: actionpack
          gem: actionpack
          requires:
            - install-deps
      - test-job:
          name: actiontext
          gem: actiontext
          requires:
            - install-deps
      - test-job:
          name: actionview
          gem: actionview
          requires:
            - install-deps
      - test-job:
          name: actionview-ujs
          gem: actionview
          command: rake test:ujs
          requires:
            - install-deps
      - test-job:
          name: activestorage
          gem: activestorage
          requires:
            - install-deps
      - test-job:
          name: activesupport
          gem: activesupport
          requires:
            - install-deps
      - test-job:
          name: guides
          gem: guides
          requires:
            - install-deps
      - test-job:
          name: activejob
          gem: activejob
          requires:
            - install-deps
      - test-job:
          name: activemodel
          gem: activemodel
          requires:
            - install-deps
      - test-job:
          name: railties
          gem: railties
          nodes: 12
          requires:
            - install-deps
      - test-job:
          name: activerecord-mysql2
          gem: activerecord
          command: rake db:mysql:rebuild mysql2:test
          requires:
            - install-deps
      - test-job:
          name: activrecord-mysql2-mariadb
          gem: activerecord
          command: rake db:mysql:rebuild mysql2:test
          mysql: mariadb:latest
          requires:
            - install-deps
      - test-job:
          name: activrecord-mysql2-prepared-statements
          gem: activerecord
          command: rake db:mysql:rebuild mysql2:test
          mysql_prepared_statements: true
          requires:
            - install-deps
      - test-job:
          name: activerecord-postgresql
          gem: activerecord
          command: rake db:postgresql:rebuild postgresql:test
          requires:
            - install-deps
      - test-job:
          name: activerecord-sqlite3
          gem: activerecord
          command: rake sqlite3:test
          requires:
            - install-deps
      - test-job:
          name: activerecord-sqlite3_mem
          gem: activerecord
          command: rake sqlite3_mem:test
          requires:
            - install-deps
      - test-job:
          name: activrecord-mysql2-isolated
          gem: activerecord
          command: rake db:mysql:rebuild mysql2:isolated_test
          nodes: 5
          requires:
            - install-deps
      - test-job:
          name: activerecord-postgresql-isolated
          gem: activerecord
          command: rake db:postgresql:rebuild postgresql:isolated_test
          nodes: 5
          requires:
            - install-deps
      - test-job:
          name: activerecord-sqlite3-isolated
          gem: activerecord
          command: rake sqlite3:isolated_test
          nodes: 5
          requires:
            - install-deps
      - test-job:
          name: actionmailer-isolated
          gem: actionmailer
          command: rake test:isolated
          requires:
            - install-deps
      - test-job:
          name: actionpack-isolated
          gem: actionpack
          command: rake test:isolated
          requires:
            - install-deps
      - test-job:
          name: actionview-isolated
          gem: actionview
          command: rake test:isolated
          requires:
            - install-deps
      - test-job:
          name: activejob-isolated
          gem: activejob
          command: rake test:isolated
          requires:
            - install-deps
      - test-job:
          name: activemodel-isolated
          gem: activemodel
          command: rake test:isolated
          requires:
            - install-deps
      - test-job:
          name: activesupport-isolated
          gem: activesupport
          command: rake test:isolated
          requires:
            - install-deps
EOF
